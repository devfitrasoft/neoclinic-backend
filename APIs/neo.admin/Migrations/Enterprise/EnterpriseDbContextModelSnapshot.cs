// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using neo.admin.Data.Enterprise;

#nullable disable

namespace neo.admin.Migrations.Enterprise
{
    [DbContext(typeof(EnterpriseDbContext))]
    partial class EnterpriseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.AuthSession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expired_at");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("issued_at");

                    b.Property<long>("LoginId")
                        .HasColumnType("bigint")
                        .HasColumnName("login_id");

                    b.Property<string>("RefreshTokenHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("refresh_token_hash");

                    b.HasKey("Id");

                    b.ToTable("sys_auth_session");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.Billing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("AmountDue")
                        .HasColumnType("numeric")
                        .HasColumnName("amount_due");

                    b.Property<int>("BillingType")
                        .HasColumnType("integer")
                        .HasColumnName("billing_type");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("due_date");

                    b.Property<long>("FaskesId")
                        .HasColumnType("bigint")
                        .HasColumnName("faskes_id");

                    b.Property<DateTime?>("GraceEndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("grace_end_date");

                    b.Property<decimal?>("GracePenalty")
                        .HasColumnType("numeric")
                        .HasColumnName("grace_penalty");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("boolean")
                        .HasColumnName("is_paid");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("payment_date");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("period_end");

                    b.Property<DateTime?>("PeriodStart")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("period_start");

                    b.Property<decimal?>("SumGracePenalty")
                        .HasColumnType("numeric")
                        .HasColumnName("sum_grace_penalty");

                    b.Property<DateTime?>("SuspensionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("suspension_date");

                    b.Property<long?>("TransactionCount")
                        .HasColumnType("bigint")
                        .HasColumnName("transaction_count");

                    b.HasKey("Id");

                    b.HasIndex("FaskesId");

                    b.ToTable("sys_billing");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.BillingSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<decimal>("GracePenalty")
                        .HasColumnType("numeric")
                        .HasColumnName("default_grace_penalty");

                    b.Property<int>("GracePeriodMonths")
                        .HasColumnType("integer")
                        .HasColumnName("default_grace_period_months");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<decimal>("RegistrationFee")
                        .HasColumnType("numeric")
                        .HasColumnName("registration_fee");

                    b.Property<decimal>("TransactionPricePerUnit")
                        .HasColumnType("numeric")
                        .HasColumnName("transaction_price_per_unit");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.ToTable("sys_billing_setting");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.ConnString", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("DbHost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("db_host");

                    b.Property<string>("DbName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("db_name");

                    b.Property<string>("DbPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("db_password");

                    b.Property<string>("DbUsername")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("db_username");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<long>("LoginId")
                        .HasColumnType("bigint")
                        .HasColumnName("login_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdaterId")
                        .HasColumnType("bigint")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.HasIndex("LoginId");

                    b.ToTable("sys_connstring");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.Corporate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdaterId")
                        .HasColumnType("bigint")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("sys_corporate");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.Faskes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<long?>("CorporateId")
                        .HasColumnType("bigint")
                        .HasColumnName("corporate_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("NPWP")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("npwp");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("NoFaskes")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("no_faskes");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registered_date");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdaterId")
                        .HasColumnType("bigint")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.HasIndex("CorporateId");

                    b.HasIndex("Name");

                    b.HasIndex("NoFaskes")
                        .IsUnique();

                    b.ToTable("sys_faskes");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.Login", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CorporateId")
                        .HasColumnType("bigint")
                        .HasColumnName("corporate_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<long>("FaskesId")
                        .HasColumnType("bigint")
                        .HasColumnName("faskes_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdaterId")
                        .HasColumnType("bigint")
                        .HasColumnName("updater_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("CorporateId");

                    b.HasIndex("Email");

                    b.HasIndex("FaskesId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("sys_login");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.OtpToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expired_at");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean")
                        .HasColumnName("is_used");

                    b.Property<long>("TargetId")
                        .HasColumnType("bigint")
                        .HasColumnName("target_id");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("sys_otp");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.PIC", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<long>("FaskesId")
                        .HasColumnType("bigint")
                        .HasColumnName("faskes_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<short>("PICType")
                        .HasColumnType("smallint")
                        .HasColumnName("pic_type");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdaterId")
                        .HasColumnType("bigint")
                        .HasColumnName("updater_id");

                    b.HasKey("Id");

                    b.HasIndex("FaskesId");

                    b.ToTable("sys_pic");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.PreRegist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("boolean")
                        .HasColumnName("is_registered");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("pre_regist");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.Billing", b =>
                {
                    b.HasOne("Shared.Entities.Objs.Enterprise.Faskes", "Faskes")
                        .WithMany("Billings")
                        .HasForeignKey("FaskesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Faskes");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.ConnString", b =>
                {
                    b.HasOne("Shared.Entities.Objs.Enterprise.Login", "Login")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.Faskes", b =>
                {
                    b.HasOne("Shared.Entities.Objs.Enterprise.Corporate", "Corporate")
                        .WithMany("Faskes")
                        .HasForeignKey("CorporateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Corporate");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.Login", b =>
                {
                    b.HasOne("Shared.Entities.Objs.Enterprise.Corporate", "Corporate")
                        .WithMany()
                        .HasForeignKey("CorporateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Shared.Entities.Objs.Enterprise.Faskes", "Faskes")
                        .WithMany("Logins")
                        .HasForeignKey("FaskesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corporate");

                    b.Navigation("Faskes");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.PIC", b =>
                {
                    b.HasOne("Shared.Entities.Objs.Enterprise.Faskes", "Faskes")
                        .WithMany("PICs")
                        .HasForeignKey("FaskesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Faskes");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.Corporate", b =>
                {
                    b.Navigation("Faskes");
                });

            modelBuilder.Entity("Shared.Entities.Objs.Enterprise.Faskes", b =>
                {
                    b.Navigation("Billings");

                    b.Navigation("Logins");

                    b.Navigation("PICs");
                });
#pragma warning restore 612, 618
        }
    }
}
